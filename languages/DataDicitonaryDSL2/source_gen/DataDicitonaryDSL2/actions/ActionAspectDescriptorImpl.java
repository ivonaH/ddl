package DataDicitonaryDSL2.actions;

/*Generated by MPS */

import jetbrains.mps.actions.descriptor.BaseActionAspectDescriptor;
import jetbrains.mps.openapi.actions.descriptor.ActionAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.actions.descriptor.NodeFactory;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;

public class ActionAspectDescriptorImpl extends BaseActionAspectDescriptor implements ActionAspectDescriptor {
  private static final String LANGUAGE_FQ_NAME = "DataDicitonaryDSL2";

  @Override
  public Collection<NodeFactory> getFactories(SAbstractConcept concept) {
    if (LANGUAGE_FQ_NAME.equals(concept.getLanguage().getQualifiedName())) {
      switch (concept.getName()) {
        case "PredefinedDomain":
          return Collections.<NodeFactory>singletonList(new predefined_domain_node_factories.NodeFactory_7032480833814212492());
        case "ReferenceFieldElement":
          return Collections.<NodeFactory>singletonList(new addingNewFieldRef.NodeFactory_2497349807121087876());
        case "ValueFieldDefinition":
          return Collections.<NodeFactory>singletonList(new field_node_factory.NodeFactory_7032480833813761046());
        case "ValueFieldElement":
          return Collections.<NodeFactory>singletonList(new addingNewFieldDef.NodeFactory_7256063613932770207());
        default:
      }
    }
    return Collections.<NodeFactory>emptyList();
  }

}
