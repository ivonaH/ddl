package DataDicitonaryDSL2.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseConstraintsAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class ConstraintsAspectDescriptor extends BaseConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }

  @Override
  public ConstraintsDescriptor getConstraints(SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return new AggregationDefinition_Constraints();
      case 1:
        return new AggregationStructureElement_Constraints();
      case 2:
        return new AndConstraint_Constraints();
      case 3:
        return new ReferenceFieldDefinition_Constraints();
      case 4:
        return new ReferenceFieldElement_Constraints();
      case 5:
        return new SemanticDomain_Constraints();
      case 6:
        return new SetStructureElement_Constraints();
      case 7:
        return new ValueFieldDefinition_Constraints();
      default:
    }
    return new BaseConstraintsDescriptor(concept);
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f0528897eL), MetaIdFactory.conceptId(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05297fb8L), MetaIdFactory.conceptId(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x11e31b8d1c0e392dL), MetaIdFactory.conceptId(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x204b5bc0d63e3eb5L), MetaIdFactory.conceptId(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x448d43d5c79e8d33L), MetaIdFactory.conceptId(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f052f3579L), MetaIdFactory.conceptId(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f0529afcbL), MetaIdFactory.conceptId(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f0529e960L)).seal();
}
