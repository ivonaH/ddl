package DataDicitonaryDSL2.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.cells.KeyMapImpl;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;
import jetbrains.mps.openapi.editor.cells.KeyMapAction;
import jetbrains.mps.editor.runtime.cells.KeyMapActionImpl;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.List;
import jetbrains.mps.baseLanguage.logging.runtime.model.LoggingRuntime;
import org.apache.log4j.Level;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class keyMapForFieldElement extends KeyMapImpl {
  private static final Logger LOG = LogManager.getLogger(keyMapForFieldElement.class);
  public keyMapForFieldElement() {
    this.setApplicableToEveryModel(false);
    KeyMapAction action;
    action = new keyMapForFieldElement_Action0();
    this.putAction("none", "letter or digit", action);
  }
  public static class keyMapForFieldElement_Action0 extends KeyMapActionImpl {
    public keyMapForFieldElement_Action0() {
      this.setShownInPopupMenu(false);
    }
    public boolean isMenuAlwaysShown() {
      return false;
    }
    public boolean canExecute(final EditorContext editorContext) {
      EditorCell contextCell = editorContext.getContextCell();
      if ((contextCell == null)) {
        return false;
      }
      SNode contextNode = contextCell.getSNode();
      if (contextNode == null) {
        return false;
      }
      if (!(SNodeOperations.isInstanceOf(contextNode, CONCEPTS.ValueFieldElement$Uu))) {
        return false;
      }
      return true;
    }
    public void execute(final EditorContext editorContext) {
      EditorCell contextCell = editorContext.getContextCell();
      this.execute_internal(editorContext, contextCell.getSNode(), this.getSelectedNodes(editorContext));
    }
    private void execute_internal(final EditorContext editorContext, final SNode node, final List<SNode> selectedNodes) {
      LoggingRuntime.logMsgView(Level.WARN, "usao u keymap", keyMapForFieldElement.class, null, null);

      SNode aggregationDefinition = SNodeOperations.getNodeAncestor(node, CONCEPTS.AggregationDefinition$18, false, false);
      for (SNode fieldDefinition : ListSequence.fromList(SLinkOperations.getChildren(aggregationDefinition, LINKS.fieldDefinitions$G$NH))) {
        if (SNodeOperations.isInstanceOf(fieldDefinition, CONCEPTS.ValueFieldDefinition$5)) {
          SNode valueFieldDefinition = (SNode) fieldDefinition;
          if (SLinkOperations.getTarget(valueFieldDefinition, LINKS.fieldElementRef$gcUp) == node) {
            LoggingRuntime.logMsgView(Level.WARN, "poyvao", keyMapForFieldElement.class, null, null);
            SPropertyOperations.assign(valueFieldDefinition, PROPS.name$MnvL, editorContext.getContextCell().toString().split("=")[1].split("]")[0]);
            LoggingRuntime.logMsgView(Level.WARN, "IME: " + SPropertyOperations.getString(valueFieldDefinition, PROPS.name$MnvL), keyMapForFieldElement.class, null, null);
          }
        }
      }
    }
    public String getKeyStroke() {
      return "none letter or digit";
    }
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept ValueFieldElement$Uu = MetaAdapterFactory.getConcept(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05295a88L, "DataDicitonaryDSL2.structure.ValueFieldElement");
    /*package*/ static final SConcept AggregationDefinition$18 = MetaAdapterFactory.getConcept(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f0528897eL, "DataDicitonaryDSL2.structure.AggregationDefinition");
    /*package*/ static final SConcept ValueFieldDefinition$5 = MetaAdapterFactory.getConcept(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f0529e960L, "DataDicitonaryDSL2.structure.ValueFieldDefinition");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink fieldElementRef$gcUp = MetaAdapterFactory.getReferenceLink(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f0529e960L, 0x6198640f052eda09L, "fieldElementRef");
    /*package*/ static final SContainmentLink fieldDefinitions$G$NH = MetaAdapterFactory.getContainmentLink(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05288979L, 0x6198640f0529e9b0L, "fieldDefinitions");
  }
}
