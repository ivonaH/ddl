package DataDicitonaryDSL2.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAggregationDefinition = createDescriptorForAggregationDefinition();
  /*package*/ final ConceptDescriptor myConceptAggregationStructureElement = createDescriptorForAggregationStructureElement();
  /*package*/ final ConceptDescriptor myConceptAndConstraint = createDescriptorForAndConstraint();
  /*package*/ final ConceptDescriptor myConceptBetweenConstraint = createDescriptorForBetweenConstraint();
  /*package*/ final ConceptDescriptor myConceptCharacter = createDescriptorForCharacter();
  /*package*/ final ConceptDescriptor myConceptComparisonConstraint = createDescriptorForComparisonConstraint();
  /*package*/ final ConceptDescriptor myConceptConstraint = createDescriptorForConstraint();
  /*package*/ final ConceptDescriptor myConceptConstraintCriterium = createDescriptorForConstraintCriterium();
  /*package*/ final ConceptDescriptor myConceptConstraintOperator = createDescriptorForConstraintOperator();
  /*package*/ final ConceptDescriptor myConceptDataDictionaryModel = createDescriptorForDataDictionaryModel();
  /*package*/ final ConceptDescriptor myConceptDate = createDescriptorForDate();
  /*package*/ final ConceptDescriptor myConceptDecimal = createDescriptorForDecimal();
  /*package*/ final ConceptDescriptor myConceptDomain = createDescriptorForDomain();
  /*package*/ final ConceptDescriptor myConceptElement = createDescriptorForElement();
  /*package*/ final ConceptDescriptor myConceptExclusiveSpecialization = createDescriptorForExclusiveSpecialization();
  /*package*/ final ConceptDescriptor myConceptFieldDefinition = createDescriptorForFieldDefinition();
  /*package*/ final ConceptDescriptor myConceptInConstraint = createDescriptorForInConstraint();
  /*package*/ final ConceptDescriptor myConceptInValue = createDescriptorForInValue();
  /*package*/ final ConceptDescriptor myConceptInteger = createDescriptorForInteger();
  /*package*/ final ConceptDescriptor myConceptLogical = createDescriptorForLogical();
  /*package*/ final ConceptDescriptor myConceptNonexclusiveSpecialization = createDescriptorForNonexclusiveSpecialization();
  /*package*/ final ConceptDescriptor myConceptNotNullConstraint = createDescriptorForNotNullConstraint();
  /*package*/ final ConceptDescriptor myConceptOrConstraint = createDescriptorForOrConstraint();
  /*package*/ final ConceptDescriptor myConceptPredefinedDomain = createDescriptorForPredefinedDomain();
  /*package*/ final ConceptDescriptor myConceptPredefinedDomainLengthConstraint = createDescriptorForPredefinedDomainLengthConstraint();
  /*package*/ final ConceptDescriptor myConceptReferenceFieldDefinition = createDescriptorForReferenceFieldDefinition();
  /*package*/ final ConceptDescriptor myConceptReferenceFieldElement = createDescriptorForReferenceFieldElement();
  /*package*/ final ConceptDescriptor myConceptSemanticDomain = createDescriptorForSemanticDomain();
  /*package*/ final ConceptDescriptor myConceptSetStructureElement = createDescriptorForSetStructureElement();
  /*package*/ final ConceptDescriptor myConceptSpecializationStructureElement = createDescriptorForSpecializationStructureElement();
  /*package*/ final ConceptDescriptor myConceptStructureDefinition = createDescriptorForStructureDefinition();
  /*package*/ final ConceptDescriptor myConceptStructureElement = createDescriptorForStructureElement();
  /*package*/ final ConceptDescriptor myConceptValueFieldDefinition = createDescriptorForValueFieldDefinition();
  /*package*/ final ConceptDescriptor myConceptValueFieldElement = createDescriptorForValueFieldElement();
  /*package*/ final EnumerationDescriptor myEnumerationOperations = new EnumerationDescriptor_Operations();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAggregationDefinition, myConceptAggregationStructureElement, myConceptAndConstraint, myConceptBetweenConstraint, myConceptCharacter, myConceptComparisonConstraint, myConceptConstraint, myConceptConstraintCriterium, myConceptConstraintOperator, myConceptDataDictionaryModel, myConceptDate, myConceptDecimal, myConceptDomain, myConceptElement, myConceptExclusiveSpecialization, myConceptFieldDefinition, myConceptInConstraint, myConceptInValue, myConceptInteger, myConceptLogical, myConceptNonexclusiveSpecialization, myConceptNotNullConstraint, myConceptOrConstraint, myConceptPredefinedDomain, myConceptPredefinedDomainLengthConstraint, myConceptReferenceFieldDefinition, myConceptReferenceFieldElement, myConceptSemanticDomain, myConceptSetStructureElement, myConceptSpecializationStructureElement, myConceptStructureDefinition, myConceptStructureElement, myConceptValueFieldDefinition, myConceptValueFieldElement);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AggregationDefinition:
        return myConceptAggregationDefinition;
      case LanguageConceptSwitch.AggregationStructureElement:
        return myConceptAggregationStructureElement;
      case LanguageConceptSwitch.AndConstraint:
        return myConceptAndConstraint;
      case LanguageConceptSwitch.BetweenConstraint:
        return myConceptBetweenConstraint;
      case LanguageConceptSwitch.Character:
        return myConceptCharacter;
      case LanguageConceptSwitch.ComparisonConstraint:
        return myConceptComparisonConstraint;
      case LanguageConceptSwitch.Constraint:
        return myConceptConstraint;
      case LanguageConceptSwitch.ConstraintCriterium:
        return myConceptConstraintCriterium;
      case LanguageConceptSwitch.ConstraintOperator:
        return myConceptConstraintOperator;
      case LanguageConceptSwitch.DataDictionaryModel:
        return myConceptDataDictionaryModel;
      case LanguageConceptSwitch.Date:
        return myConceptDate;
      case LanguageConceptSwitch.Decimal:
        return myConceptDecimal;
      case LanguageConceptSwitch.Domain:
        return myConceptDomain;
      case LanguageConceptSwitch.Element:
        return myConceptElement;
      case LanguageConceptSwitch.ExclusiveSpecialization:
        return myConceptExclusiveSpecialization;
      case LanguageConceptSwitch.FieldDefinition:
        return myConceptFieldDefinition;
      case LanguageConceptSwitch.InConstraint:
        return myConceptInConstraint;
      case LanguageConceptSwitch.InValue:
        return myConceptInValue;
      case LanguageConceptSwitch.Integer:
        return myConceptInteger;
      case LanguageConceptSwitch.Logical:
        return myConceptLogical;
      case LanguageConceptSwitch.NonexclusiveSpecialization:
        return myConceptNonexclusiveSpecialization;
      case LanguageConceptSwitch.NotNullConstraint:
        return myConceptNotNullConstraint;
      case LanguageConceptSwitch.OrConstraint:
        return myConceptOrConstraint;
      case LanguageConceptSwitch.PredefinedDomain:
        return myConceptPredefinedDomain;
      case LanguageConceptSwitch.PredefinedDomainLengthConstraint:
        return myConceptPredefinedDomainLengthConstraint;
      case LanguageConceptSwitch.ReferenceFieldDefinition:
        return myConceptReferenceFieldDefinition;
      case LanguageConceptSwitch.ReferenceFieldElement:
        return myConceptReferenceFieldElement;
      case LanguageConceptSwitch.SemanticDomain:
        return myConceptSemanticDomain;
      case LanguageConceptSwitch.SetStructureElement:
        return myConceptSetStructureElement;
      case LanguageConceptSwitch.SpecializationStructureElement:
        return myConceptSpecializationStructureElement;
      case LanguageConceptSwitch.StructureDefinition:
        return myConceptStructureDefinition;
      case LanguageConceptSwitch.StructureElement:
        return myConceptStructureElement;
      case LanguageConceptSwitch.ValueFieldDefinition:
        return myConceptValueFieldDefinition;
      case LanguageConceptSwitch.ValueFieldElement:
        return myConceptValueFieldElement;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationOperations);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAggregationDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "AggregationDefinition", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f0528897eL);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.StructureDefinition", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05288979L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/7032480833812859262");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAggregationStructureElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "AggregationStructureElement", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05297fb8L);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.StructureElement", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05297fb3L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/7032480833812922296");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAndConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "AndConstraint", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x11e31b8d1c0e392dL);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.ConstraintOperator", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0xbb4b2c0f5806236L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/1288904211233126701");
    b.version(2);
    b.alias("AND");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBetweenConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "BetweenConstraint", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0xbb4b2c0f5806237L);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.ConstraintCriterium", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0xbb4b2c0f5806235L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/843495572047422007");
    b.version(2);
    b.property("number1", 0xbb4b2c0f5806238L).type(PrimitiveTypeId.INTEGER).origin("843495572047422008").done();
    b.property("number2", 0xbb4b2c0f580623aL).type(PrimitiveTypeId.INTEGER).origin("843495572047422010").done();
    b.alias("BETWEEN");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCharacter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "Character", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f052e47aaL);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.PredefinedDomain", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f052e47a6L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/7032480833813235626");
    b.version(2);
    b.alias("CHARACTER");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForComparisonConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "ComparisonConstraint", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x11e31b8d1c0975b2L);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.ConstraintCriterium", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0xbb4b2c0f5806235L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/1288904211232814514");
    b.version(2);
    b.property("number1", 0x11e31b8d1c0975b3L).type(PrimitiveTypeId.INTEGER).origin("1288904211232814515").done();
    b.property("operation", 0x11e31b8d1c0975c5L).type(MetaIdFactory.dataTypeId(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x11e31b8d1c097568L)).origin("1288904211232814533").done();
    b.alias("COMPARE");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "Constraint", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0xbb4b2c0f5806234L);
    b.class_(false, true, false);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/843495572047422004");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintCriterium() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "ConstraintCriterium", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0xbb4b2c0f5806235L);
    b.class_(false, true, false);
    b.super_("DataDicitonaryDSL2.structure.Constraint", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0xbb4b2c0f5806234L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/843495572047422005");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "ConstraintOperator", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0xbb4b2c0f5806236L);
    b.class_(false, true, false);
    b.super_("DataDicitonaryDSL2.structure.Constraint", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0xbb4b2c0f5806234L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/843495572047422006");
    b.version(2);
    b.aggregate("constraint1", 0x11e31b8d1c0e3930L).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0xbb4b2c0f5806234L).optional(false).ordered(true).multiple(false).origin("1288904211233126704").done();
    b.aggregate("constraint2", 0x11e31b8d1c0e3932L).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0xbb4b2c0f5806234L).optional(false).ordered(true).multiple(false).origin("1288904211233126706").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataDictionaryModel() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "DataDictionaryModel", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05288978L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/7032480833812859256");
    b.version(2);
    b.aggregate("aggregations", 0x6198640f052889ebL).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f0528897eL).optional(true).ordered(true).multiple(true).origin("7032480833812859371").done();
    b.aggregate("predefinedDomains", 0x6198640f052ed8ffL).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f052e47a6L).optional(true).ordered(true).multiple(true).origin("7032480833813272831").done();
    b.aggregate("semanticDomains", 0x6198640f052fa1e9L).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f052f3579L).optional(true).ordered(true).multiple(true).origin("7032480833813324265").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "Date", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f052e47a9L);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.PredefinedDomain", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f052e47a6L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/7032480833813235625");
    b.version(2);
    b.alias("DATE");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDecimal() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "Decimal", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x14f973452d1efc3bL);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.PredefinedDomain", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f052e47a6L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/1511365890906455099");
    b.version(2);
    b.alias("DECIMAL");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDomain() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "Domain", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f052e02edL);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/7032480833813218029");
    b.version(2);
    b.aggregate("constraint", 0x11e31b8d1c1070a4L).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0xbb4b2c0f5806234L).optional(true).ordered(true).multiple(false).origin("1288904211233271972").done();
    b.aggregate("size", 0x6ebb450943e40521L).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x377d663a3af96695L).optional(true).ordered(true).multiple(false).origin("7979047070913004833").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "Element", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05295a7dL);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/7032480833812912765");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExclusiveSpecialization() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "ExclusiveSpecialization", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x14f973452d1519c2L);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.SpecializationStructureElement", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x14f973452d1519bfL);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/1511365890905807298");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFieldDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "FieldDefinition", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f0529e95bL);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/7032480833812949339");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "InConstraint", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x11e31b8d1bfa355eL);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.ConstraintCriterium", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0xbb4b2c0f5806235L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/1288904211231815006");
    b.version(2);
    b.property("strings", 0x11e31b8d1c013e84L).type(PrimitiveTypeId.STRING).origin("1288904211232276100").done();
    b.aggregate("values", 0x11e31b8d1bfa3561L).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x11e31b8d1c055781L).optional(false).ordered(true).multiple(true).origin("1288904211231815009").done();
    b.alias("IN");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "InValue", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x11e31b8d1c055781L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/1288904211232544641");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInteger() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "Integer", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f0531e4d7L);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.PredefinedDomain", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f052e47a6L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/7032480833813472471");
    b.version(2);
    b.alias("INTEGER");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLogical() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "Logical", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x14f973452d1efc57L);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.PredefinedDomain", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f052e47a6L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/1511365890906455127");
    b.version(2);
    b.alias("LOGIC");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNonexclusiveSpecialization() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "NonexclusiveSpecialization", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x14f973452d1519c3L);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.SpecializationStructureElement", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x14f973452d1519bfL);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/1511365890905807299");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNotNullConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "NotNullConstraint", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x11e31b8d1c07623dL);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.ConstraintCriterium", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0xbb4b2c0f5806235L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/1288904211232678461");
    b.version(2);
    b.alias("NOT NULL");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOrConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "OrConstraint", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x11e31b8d1c0e395eL);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.ConstraintOperator", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0xbb4b2c0f5806236L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/1288904211233126750");
    b.version(2);
    b.alias("OR");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPredefinedDomain() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "PredefinedDomain", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f052e47a6L);
    b.class_(false, true, false);
    b.super_("DataDicitonaryDSL2.structure.Domain", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f052e02edL);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/7032480833813235622");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPredefinedDomainLengthConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "PredefinedDomainLengthConstraint", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x377d663a3af96695L);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.Constraint", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0xbb4b2c0f5806234L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/3998464444458428053");
    b.version(2);
    b.property("length", 0x377d663a3af96696L).type(PrimitiveTypeId.INTEGER).origin("3998464444458428054").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReferenceFieldDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "ReferenceFieldDefinition", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x204b5bc0d63e3eb5L);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.FieldDefinition", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f0529e95bL);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/2327054516253245109");
    b.version(2);
    b.associate("refElement", 0x448d43d5c79e8d34L).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x448d43d5c79e8d33L).optional(false).origin("4939678951751454004").done();
    b.associate("refFieldElementForeign", 0x5f3e32b4b07f5e8cL).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05295a88L).optional(false).origin("6862978633795853964").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReferenceFieldElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "ReferenceFieldElement", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x448d43d5c79e8d33L);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.Element", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05295a7dL);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/4939678951751454003");
    b.version(2);
    b.associate("refAggregationDefinition", 0x448d43d5c7a6f475L).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f0528897eL).optional(true).origin("4939678951752004725").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSemanticDomain() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "SemanticDomain", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f052f3579L);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.Domain", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f052e02edL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/7032480833813296505");
    b.version(2);
    b.associate("domainRef", 0x6198640f052f357cL).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f052e02edL).optional(false).origin("7032480833813296508").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetStructureElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "SetStructureElement", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f0529afcbL);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.StructureElement", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05297fb3L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/7032480833812934603");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSpecializationStructureElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "SpecializationStructureElement", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x14f973452d1519bfL);
    b.class_(false, true, false);
    b.super_("DataDicitonaryDSL2.structure.StructureElement", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05297fb3L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/1511365890905807295");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStructureDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "StructureDefinition", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05288979L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/7032480833812859257");
    b.version(2);
    b.aggregate("elements", 0x6198640f05295aa4L).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05295a7dL).optional(true).ordered(true).multiple(true).origin("7032480833812912804").done();
    b.aggregate("fieldDefinitions", 0x6198640f0529e9b0L).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f0529e95bL).optional(true).ordered(true).multiple(true).origin("7032480833812949424").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStructureElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "StructureElement", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05297fb3L);
    b.class_(false, true, false);
    b.super_("DataDicitonaryDSL2.structure.Element", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05295a7dL);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/7032480833812922291");
    b.version(2);
    b.aggregate("elements", 0x6198640f05297fb6L).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05295a7dL).optional(true).ordered(true).multiple(true).origin("7032480833812922294").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForValueFieldDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "ValueFieldDefinition", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f0529e960L);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.FieldDefinition", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f0529e95bL);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/7032480833812949344");
    b.version(2);
    b.associate("domainRef", 0x6198640f052eda07L).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f052e02edL).optional(false).origin("7032480833813273095").done();
    b.associate("fieldElementRef", 0x6198640f052eda09L).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05295a88L).optional(false).origin("7032480833813273097").done();
    b.aggregate("length", 0x6e1f466ba73d8f4fL).target(0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x377d663a3af96695L).optional(true).ordered(true).multiple(false).origin("7935138496631377743").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForValueFieldElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDicitonaryDSL2", "ValueFieldElement", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05295a88L);
    b.class_(false, false, false);
    b.super_("DataDicitonaryDSL2.structure.Element", 0xe42098a93fd7446cL, 0x8eb044c9c71b5415L, 0x6198640f05295a7dL);
    b.origin("r:b98f07a2-a3fa-4b01-9c54-bc49c2e05642(DataDicitonaryDSL2.structure)/7032480833812912776");
    b.version(2);
    return b.create();
  }
}
